<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Diverse</name>
    </assembly>
    <members>
        <member name="T:Diverse.DateTimes.DateTimeFuzzer">
            <summary>
            Fuzz <see cref="T:System.DateTime"/>.
            </summary>
        </member>
        <member name="M:Diverse.DateTimes.DateTimeFuzzer.#ctor(Diverse.IProvideCorePrimitivesToFuzzer,Diverse.IFuzzNumbers)">
            <summary>
            Instantiates a <see cref="T:Diverse.DateTimes.DateTimeFuzzer"/>.
            </summary>
            <param name="fuzzerPrimitives">Instance of <see cref="T:Diverse.IProvideCorePrimitivesToFuzzer"/> to use.</param>
            <param name="numberFuzzer">Instance of <see cref="T:Diverse.IFuzzNumbers"/> to use.</param>
        </member>
        <member name="M:Diverse.DateTimes.DateTimeFuzzer.GenerateDateTime">
            <summary>
            Generates a random <see cref="T:System.DateTime"/>.
            </summary>
            <returns>A <see cref="T:System.DateTime"/> value generated randomly.</returns>
        </member>
        <member name="M:Diverse.DateTimes.DateTimeFuzzer.GenerateDateTimeBetween(System.DateTime,System.DateTime)">
            <summary>
            Generates a random <see cref="T:System.DateTime"/> in a Time Range.
            </summary>
            <param name="minValue">The minimum inclusive boundary of the Time Range for this <see cref="T:System.DateTime"/> generation.</param>
            <param name="maxValue">The maximum inclusive boundary of the Time Range for this <see cref="T:System.DateTime"/> generation.</param>
            <returns>A <see cref="T:System.DateTime"/> instance between the min and the max inclusive boundaries.</returns>
        </member>
        <member name="M:Diverse.DateTimes.DateTimeFuzzer.GenerateDateTimeBetween(System.String,System.String)">
            <summary>
            Generates a random <see cref="T:System.DateTime"/> in a Time Range.
            </summary>
            <param name="minDate">The minimum inclusive boundary of the Time Range for this <see cref="T:System.DateTime"/> generation, specified as a yyyy/MM/dd string.</param>
            <param name="maxDate">The maximum inclusive boundary of the Time Range for this <see cref="T:System.DateTime"/> generation, specified as a yyyy/MM/dd string.</param>
            <returns>A <see cref="T:System.DateTime"/> instance between the min and the max inclusive boundaries.</returns>
        </member>
        <member name="T:Diverse.DateTimes.TypeFuzzer">
            <summary>
            Fuzz instance of Types.
            </summary>
        </member>
        <member name="M:Diverse.DateTimes.TypeFuzzer.#ctor(Diverse.IProvideCorePrimitivesToFuzzer,Diverse.IFuzzPersons)">
            <summary>
            Instantiates a <see cref="T:Diverse.DateTimes.TypeFuzzer"/>.
            </summary>
            <param name="fuzzerPrimitives">Instance of <see cref="T:Diverse.IProvideCorePrimitivesToFuzzer"/> to use.</param>
            <param name="personFuzzer">Instance of <see cref="T:Diverse.IFuzzPersons"/> to use.</param>
        </member>
        <member name="T:Diverse.Fuzzer">
            <summary>
            Allows to generate lots of combination of things. <see cref="T:Diverse.Fuzzer"/> are very useful to detect hard coded values in our implementations.
            Note: you can instantiate another Deterministic Fuzzer by providing it the Seed you want to reuse.
            </summary>
        </member>
        <member name="P:Diverse.Fuzzer.Seed">
            <summary>
            Generates a DefaultSeed. Important to keep a trace of the used seed so that we can reproduce a failing situation with <see cref="T:Diverse.Fuzzer"/> involved.
            </summary>
        </member>
        <member name="P:Diverse.Fuzzer.Name">
            <summary>
            Gets the name of this <see cref="T:Diverse.Fuzzer"/> instance.
            </summary>
        </member>
        <member name="P:Diverse.Fuzzer.Diverse#IFuzz#Random">
            <summary>
            Gets the Random instance to be used when we want to create a new extension method for the <see cref="T:Diverse.Fuzzer"/>.
            <remarks>The use of explicit interface implementation for this property is made on purpose in order to hide this internal mechanic details from the Fuzzer end-user code.</remarks>
            </summary>
        </member>
        <member name="P:Diverse.Fuzzer.Diverse#IProvideCorePrimitivesToFuzzer#Random">
            <summary>
            Gets a <see cref="T:System.Random"/> instance to use if you want your Fuzzer to be deterministic when providing a seed.
            <remarks>The use of explicit interface implementation for this property is made on purpose in order to hide this internal mechanic details from the Fuzzer end-user code.</remarks>
            </summary>
        </member>
        <member name="P:Diverse.Fuzzer.InternalRandom">
            <summary>
            Gives easy access to the <see cref="P:Diverse.IFuzz.Random"/> explicit implementation.
            </summary>
        </member>
        <member name="P:Diverse.Fuzzer.Log">
            <summary>
            Sets the way you want to log or receive what the <see cref="T:Diverse.Fuzzer"/> has to say about every generated seeds used for every fuzzer instance and test.
            </summary>
        </member>
        <member name="M:Diverse.Fuzzer.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
            Instantiates a <see cref="T:Diverse.Fuzzer"/>.
            </summary>
            <param name="seed">The seed if you want to reuse in order to reproduce the very same conditions of another (failing) test.</param>
            <param name="name">The name you want to specify for this <see cref="T:Diverse.Fuzzer"/> instance (useful for debuging purpose).</param>
        </member>
        <member name="M:Diverse.Fuzzer.HeadsOrTails">
            <summary>
            Flips a coin.
            </summary>
            <returns><b>True</b> if Heads; <b>False</b> otherwise (i.e. Tails).</returns>
        </member>
        <member name="M:Diverse.Fuzzer.GenerateInteger(System.Int32,System.Int32)">
            <summary>
            Generates a random integer value between a min (inclusive) and a max (exclusive) value.
            </summary>
            <param name="minValue">The inclusive lower bound of the random number returned.</param>
            <param name="maxValue">The inclusive upper bound of the random number returned.</param>
            <returns>An integer value generated randomly.</returns>
        </member>
        <member name="M:Diverse.Fuzzer.GenerateInteger">
            <summary>
            Generates a random integer value.
            </summary>
            <returns>An integer value generated randomly.</returns>
        </member>
        <member name="M:Diverse.Fuzzer.GeneratePositiveInteger(System.Nullable{System.Int32})">
            <summary>
            Generates a random positive integer value.
            </summary>
            <param name="maxValue">The inclusive upper bound of the random number returned.</param>
            <returns>A positive integer value generated randomly.</returns>
        </member>
        <member name="M:Diverse.Fuzzer.GeneratePositiveDecimal">
            <summary>
            Generates a random positive decimal value.
            </summary>
            <returns>A positive decimal value generated randomly.</returns>
        </member>
        <member name="M:Diverse.Fuzzer.GenerateFirstName(System.Nullable{Diverse.Gender})">
            <summary>
            Generates a 'Diverse' first name (i.e. from all around the world and different cultures).
            </summary>
            <param name="gender">The <see cref="T:Diverse.Gender"/> to be used as indication (optional).</param>
            <returns>A 'Diverse' first name.</returns>
        </member>
        <member name="M:Diverse.Fuzzer.GenerateLastName(System.String)">
            <summary>
            Generates a 'Diverse' first name (i.e. from all around the world and different cultures).
            </summary>
            <param name="firstName">The first name of this person.</param>
            <returns>A 'Diverse' last name.</returns>
        </member>
        <member name="M:Diverse.Fuzzer.GeneratePerson(System.Nullable{Diverse.Gender})">
            <summary>
            Generates a 'Diverse' <see cref="T:Diverse.Person"/> (i.e. from all around the world and different cultures). 
            </summary>
            <param name="gender">The (optional) <see cref="T:Diverse.Gender"/> of this <see cref="T:Diverse.Person"/></param>
            <returns>A 'Diverse' <see cref="T:Diverse.Person"/> instance.</returns>
        </member>
        <member name="M:Diverse.Fuzzer.GenerateEMail(System.String,System.String)">
            <summary>
            Generates a random Email.
            </summary>
            <param name="firstName">The (optional) first name for this Email</param>
            <param name="lastName">The (option) last name for this Email.</param>
            <returns>A random Email.</returns>
        </member>
        <member name="M:Diverse.Fuzzer.GeneratePassword(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Generates a password following some common rules asked on the internet.
            </summary>
            <returns>The generated password</returns>
        </member>
        <member name="M:Diverse.Fuzzer.GenerateDateTime">
            <summary>
            Generates a random <see cref="T:System.DateTime"/>.
            </summary>
            <returns>A <see cref="T:System.DateTime"/> value generated randomly.</returns>
        </member>
        <member name="M:Diverse.Fuzzer.GenerateDateTimeBetween(System.DateTime,System.DateTime)">
            <summary>
            Generates a random <see cref="T:System.DateTime"/> in a Time Range.
            </summary>
            <param name="minValue">The minimum inclusive boundary of the Time Range for this <see cref="T:System.DateTime"/> generation.</param>
            <param name="maxValue">The maximum inclusive boundary of the Time Range for this <see cref="T:System.DateTime"/> generation.</param>
            <returns>A <see cref="T:System.DateTime"/> instance between the min and the max inclusive boundaries.</returns>
        </member>
        <member name="M:Diverse.Fuzzer.GenerateDateTimeBetween(System.String,System.String)">
            <summary>
            Generates a random <see cref="T:System.DateTime"/> in a Time Range.
            </summary>
            <param name="minDate">The minimum inclusive boundary of the Time Range for this <see cref="T:System.DateTime"/> generation, specified as a yyyy/MM/dd string.</param>
            <param name="maxDate">The maximum inclusive boundary of the Time Range for this <see cref="T:System.DateTime"/> generation, specified as a yyyy/MM/dd string.</param>
            <returns>A <see cref="T:System.DateTime"/> instance between the min and the max inclusive boundaries.</returns>
        </member>
        <member name="M:Diverse.Fuzzer.GenerateAdjective(System.Nullable{Diverse.Strings.Feeling})">
            <summary>
            Generates a random adjective based on a feeling.
            </summary>
            <param name="feeling">The expected feeling of the adjective</param>
            <returns>An adjective based on a particular feeling or random one if not provided</returns>
        </member>
        <member name="T:Diverse.FuzzerException">
            <summary>
            An exception related to Fuzzing.
            </summary>
        </member>
        <member name="M:Diverse.FuzzerException.#ctor(System.String)">
            <summary>
            Instantiates a <see cref="T:Diverse.FuzzerException"/>.
            </summary>
            <param name="message">The message of the <see cref="T:Diverse.FuzzerException"/>.</param>
        </member>
        <member name="T:Diverse.IFuzz">
            <summary>
            Interface to build your own <see cref="T:Diverse.Fuzzer"/> through extension methods.
            </summary>
        </member>
        <member name="P:Diverse.IFuzz.Random">
            <summary>
            Gets a <see cref="P:Diverse.IFuzz.Random"/> instance to use if you want your extensible Fuzzer to be deterministic when providing a seed.
            </summary>
        </member>
        <member name="T:Diverse.IFuzzDatesAndTime">
            <summary>
            Fuzz Dates and Time.
            </summary>
        </member>
        <member name="M:Diverse.IFuzzDatesAndTime.GenerateDateTime">
            <summary>
            Generates a random <see cref="T:System.DateTime"/>.
            </summary>
            <returns>A <see cref="T:System.DateTime"/> value generated randomly.</returns>
        </member>
        <member name="M:Diverse.IFuzzDatesAndTime.GenerateDateTimeBetween(System.DateTime,System.DateTime)">
            <summary>
            Generates a random <see cref="T:System.DateTime"/> in a Time Range.
            </summary>
            <param name="minValue">The minimum inclusive boundary of the Time Range for this <see cref="T:System.DateTime"/> generation.</param>
            <param name="maxValue">The maximum inclusive boundary of the Time Range for this <see cref="T:System.DateTime"/> generation.</param>
            <returns>A <see cref="T:System.DateTime"/> instance between the min and the max inclusive boundaries.</returns>
        </member>
        <member name="M:Diverse.IFuzzDatesAndTime.GenerateDateTimeBetween(System.String,System.String)">
            <summary>
            Generates a random <see cref="T:System.DateTime"/> in a Time Range.
            </summary>
            <param name="minDate">The minimum inclusive boundary of the Time Range for this <see cref="T:System.DateTime"/> generation, specified as a yyyy/MM/dd string.</param>
            <param name="maxDate">The maximum inclusive boundary of the Time Range for this <see cref="T:System.DateTime"/> generation, specified as a yyyy/MM/dd string.</param>
            <returns>A <see cref="T:System.DateTime"/> instance between the min and the max inclusive boundaries.</returns>
        </member>
        <member name="T:Diverse.IFuzzNumbers">
            <summary>
            Fuzz numbers.
            </summary>
        </member>
        <member name="M:Diverse.IFuzzNumbers.GenerateInteger(System.Int32,System.Int32)">
            <summary>
            Generates a random integer value between a min (inclusive) and a max (exclusive) value.
            </summary>
            <param name="minValue">The inclusive lower bound of the random number returned.</param>
            <param name="maxValue">The inclusive upper bound of the random number returned.</param>
            <returns>An integer value generated randomly.</returns>
        </member>
        <member name="M:Diverse.IFuzzNumbers.GenerateInteger">
            <summary>
            Generates a random integer value.
            </summary>
            <returns>An integer value generated randomly.</returns>
        </member>
        <member name="M:Diverse.IFuzzNumbers.GeneratePositiveInteger(System.Nullable{System.Int32})">
            <summary>
            Generates a random positive integer value.
            </summary>
            <param name="maxValue">The inclusive upper bound of the random number returned.</param>
            <returns>A positive integer value generated randomly.</returns>
        </member>
        <member name="M:Diverse.IFuzzNumbers.GeneratePositiveDecimal">
            <summary>
            Generates a random positive decimal value.
            </summary>
            <returns>A positive decimal value generated randomly.</returns>
        </member>
        <member name="T:Diverse.IFuzzPersons">
            <summary>
            Fuzz <see cref="T:Diverse.Person"/> related information.
            </summary>
        </member>
        <member name="M:Diverse.IFuzzPersons.GenerateFirstName(System.Nullable{Diverse.Gender})">
            <summary>
            Generates a 'Diverse' first name (i.e. from all around the world and different cultures).
            </summary>
            <param name="gender">The <see cref="T:Diverse.Gender"/> to be used as indication (optional).</param>
            <returns>A 'Diverse' first name.</returns>
        </member>
        <member name="M:Diverse.IFuzzPersons.GenerateLastName(System.String)">
            <summary>
            Generates a 'Diverse' last name (i.e. from all around the world and different cultures).
            </summary>
            <param name="firstName">The first name of this person.</param>
            <returns>A 'Diverse' last name.</returns>
        </member>
        <member name="M:Diverse.IFuzzPersons.GeneratePerson(System.Nullable{Diverse.Gender})">
            <summary>
            Generates a 'Diverse' <see cref="T:Diverse.Person"/> (i.e. from all around the world and different cultures). 
            </summary>
            <param name="gender">The (optional) <see cref="T:Diverse.Gender"/> of this <see cref="T:Diverse.Person"/></param>
            <returns>A 'Diverse' <see cref="T:Diverse.Person"/> instance.</returns>
        </member>
        <member name="M:Diverse.IFuzzPersons.GenerateEMail(System.String,System.String)">
            <summary>
            Generates a random Email.
            </summary>
            <param name="firstName">The (optional) first name for this Email</param>
            <param name="lastName">The (option) last name for this Email.</param>
            <returns>A random Email.</returns>
        </member>
        <member name="M:Diverse.IFuzzPersons.GeneratePassword(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Generates a password following some common rules asked on the internet.
            </summary>
            <returns>The generated password</returns>
        </member>
        <member name="T:Diverse.IFuzzStrings">
            <summary>
            Fuzz numbers.
            </summary>
        </member>
        <member name="M:Diverse.IFuzzStrings.GenerateAdjective(System.Nullable{Diverse.Strings.Feeling})">
            <summary>
            Generates a random adjective based on a feeling.
            </summary>
            <param name="feeling">The expected feeling of the adjective</param>
            <returns>An adjective based on a particular feeling or random one if not provided</returns>
        </member>
        <member name="T:Diverse.IFuzzTypes">
            <summary>
            Fuzz instance of Types.
            </summary>
        </member>
        <member name="M:Diverse.IFuzzTypes.GenerateInstance``1">
            <summary>
            Generates an instance of a type T.
            </summary>
            <returns>An instance with string properties set to random strings</returns>
        </member>
        <member name="T:Diverse.IProvideCorePrimitivesToFuzzer">
            <summary>
            Provides Core primitives for <see cref="T:Diverse.Fuzzer"/> to be able to work.
            </summary>
        </member>
        <member name="P:Diverse.IProvideCorePrimitivesToFuzzer.Random">
            <summary>
            Gets a <see cref="P:Diverse.IProvideCorePrimitivesToFuzzer.Random"/> instance to use if you want your Fuzzer to be deterministic when providing a seed.
            </summary>
        </member>
        <member name="M:Diverse.IProvideCorePrimitivesToFuzzer.HeadsOrTails">
            <summary>
            Flips a coin.
            </summary>
            <returns><b>True</b> if Heads; <b>False</b> otherwise (i.e. Tails).</returns>
        </member>
        <member name="T:Diverse.Numbers.NumberFuzzer">
            <summary>
            Fuzz numbers.
            </summary>
        </member>
        <member name="M:Diverse.Numbers.NumberFuzzer.#ctor(Diverse.IProvideCorePrimitivesToFuzzer)">
            <summary>
            Instantiates a <see cref="T:Diverse.Numbers.NumberFuzzer"/>.
            </summary>
            <param name="fuzzerPrimitives">Instance of <see cref="T:Diverse.IProvideCorePrimitivesToFuzzer"/> to use.</param>
        </member>
        <member name="M:Diverse.Numbers.NumberFuzzer.GenerateInteger(System.Int32,System.Int32)">
            <summary>
            Generates a random integer value between a min (inclusive) and a max (exclusive) value.
            </summary>
            <param name="minValue">The inclusive lower bound of the random number returned.</param>
            <param name="maxValue">The inclusive upper bound of the random number returned.</param>
            <returns>An integer value generated randomly.</returns>
        </member>
        <member name="M:Diverse.Numbers.NumberFuzzer.GenerateInteger">
            <summary>
            Generates a random integer value.
            </summary>
            <returns>An integer value generated randomly.</returns>
        </member>
        <member name="M:Diverse.Numbers.NumberFuzzer.GeneratePositiveInteger(System.Nullable{System.Int32})">
            <summary>
            Generates a random positive integer value.
            </summary>
            <param name="maxValue">The inclusive upper bound of the random number returned.</param>
            <returns>A positive integer value generated randomly.</returns>
        </member>
        <member name="M:Diverse.Numbers.NumberFuzzer.GeneratePositiveDecimal">
            <summary>
            Generates a random positive decimal value.
            </summary>
            <returns>A positive decimal value generated randomly.</returns>
        </member>
        <member name="T:Diverse.ContextualizedFirstName">
            <summary>
            A first name with some related information (like the <see cref="P:Diverse.ContextualizedFirstName.Origin"/> of it).
            </summary>
        </member>
        <member name="M:Diverse.ContextualizedFirstName.#ctor(System.String,Diverse.Continent)">
            <summary>
            Instantiates a <see cref="T:Diverse.ContextualizedFirstName"/>.
            </summary>
            <param name="firstName">The first name.</param>
            <param name="origin">The possible origin or the <see cref="T:Diverse.Continent"/> where you can find lots of people having this first name.</param>
        </member>
        <member name="P:Diverse.ContextualizedFirstName.FirstName">
            <summary>
            First name.
            </summary>
        </member>
        <member name="P:Diverse.ContextualizedFirstName.Origin">
            <summary>
            The <see cref="T:Diverse.Continent"/> where this first name may be originated. It may also be the <see cref="T:Diverse.Continent"/> where lots of people have this first name (and not the real Origin for it).
            </summary>
        </member>
        <member name="T:Diverse.Continent">
            <summary>
            Continents on Earth.
            </summary>
        </member>
        <member name="F:Diverse.Continent.Africa">
            <summary>
            Africa
            </summary>
        </member>
        <member name="F:Diverse.Continent.Antarctica">
            <summary>
            Antarctica
            </summary>
        </member>
        <member name="F:Diverse.Continent.Asia">
            <summary>
            Asia
            </summary>
        </member>
        <member name="F:Diverse.Continent.Australia">
            <summary>
            Australia
            </summary>
        </member>
        <member name="F:Diverse.Continent.Europe">
            <summary>
            Europe
            </summary>
        </member>
        <member name="F:Diverse.Continent.NorthAmerica">
            <summary>
            North-America
            </summary>
        </member>
        <member name="F:Diverse.Continent.SouthAmerica">
            <summary>
            South-America
            </summary>
        </member>
        <member name="T:Diverse.Female">
            <summary>
            Information related to female persons.
            </summary>
        </member>
        <member name="P:Diverse.Female.ContextualizedFirstNames">
            <summary>
            Gets all the <see cref="T:Diverse.ContextualizedFirstName"/> instances possibly used by the lib.
            </summary>
        </member>
        <member name="P:Diverse.Female.FirstNames">
            <summary>
            Gets all the female first names possibly used by the lib.
            </summary>
        </member>
        <member name="T:Diverse.Gender">
            <summary>
            Gender of a <see cref="T:Diverse.Person"/>.
            </summary>
        </member>
        <member name="F:Diverse.Gender.Male">
            <summary>
            Male.
            </summary>
        </member>
        <member name="F:Diverse.Gender.Female">
            <summary>
            Female.
            </summary>
        </member>
        <member name="F:Diverse.Gender.NonBinary">
            <summary>
            Non binary.
            </summary>
        </member>
        <member name="T:Diverse.GenderTitle">
            <summary>
            Gender title.
            </summary>
        </member>
        <member name="F:Diverse.GenderTitle.Mr">
            <summary>
            Mister.
            </summary>
        </member>
        <member name="F:Diverse.GenderTitle.Mrs">
            <summary>
            Missus.
            </summary>
        </member>
        <member name="F:Diverse.GenderTitle.Ms">
            <summary>
            Addressing a grown woman as "Ms." is safer than "Miss" or "Mrs."
            </summary>
        </member>
        <member name="F:Diverse.GenderTitle.Mx">
            <summary>
            Miks or Muks (used for Non-binary people).
            </summary>
        </member>
        <member name="T:Diverse.LastNames">
            <summary>
            Contains all the last names used by the library.
            </summary>
        </member>
        <member name="P:Diverse.LastNames.PerContinent">
            <summary>
            Gets a dictionary of all the last name per <see cref="T:Diverse.Continent"/>.
            </summary>
        </member>
        <member name="T:Diverse.Male">
            <summary>
            Information related to male persons.
            </summary>
        </member>
        <member name="P:Diverse.Male.ContextualizedFirstNames">
            <summary>
            Gets all the <see cref="T:Diverse.ContextualizedFirstName"/> instances possibly used by the lib.
            </summary>
        </member>
        <member name="P:Diverse.Male.FirstNames">
            <summary>
            Gets all the male first names possibly used by the lib.
            </summary>
        </member>
        <member name="T:Diverse.Person">
            <summary>
            Represent a <see cref="T:Diverse.Person"/> with some common characteristics.
            Very useful to test most of the applications dealing with humans.
            </summary>
        </member>
        <member name="P:Diverse.Person.FirstName">
            <summary>
            Gets the first name of the <see cref="T:Diverse.Person"/> instance.
            </summary>
        </member>
        <member name="P:Diverse.Person.LastName">
            <summary>
            Gets the last name of the <see cref="T:Diverse.Person"/> instance.
            </summary>
        </member>
        <member name="P:Diverse.Person.Gender">
            <summary>
            Gets the gender of the <see cref="T:Diverse.Person"/> instance.
            </summary>
        </member>
        <member name="P:Diverse.Person.Title">
            <summary>
            Gets the title of the <see cref="T:Diverse.Person"/> instance.
            </summary>
        </member>
        <member name="P:Diverse.Person.EMail">
            <summary>
            Gets the email of the <see cref="T:Diverse.Person"/> instance.
            </summary>
        </member>
        <member name="P:Diverse.Person.IsMarried">
            <summary>
            Gets whether or not the <see cref="T:Diverse.Person"/> instance is married.
            </summary>
        </member>
        <member name="P:Diverse.Person.Age">
            <summary>
            Gets the age of the <see cref="T:Diverse.Person"/> instance.
            </summary>
        </member>
        <member name="M:Diverse.Person.ToString">
            <summary>
            Returns this instance of <see cref="T:System.String"/>.
            </summary>
            <returns>The current string./</returns>
        </member>
        <member name="T:Diverse.PersonFuzzer">
            <summary>
            Fuzz <see cref="T:Diverse.Person"/>.
            </summary>
        </member>
        <member name="M:Diverse.PersonFuzzer.#ctor(Diverse.IProvideCorePrimitivesToFuzzer,Diverse.IFuzzNumbers)">
            <summary>
            Instantiates a <see cref="T:Diverse.PersonFuzzer"/>.
            </summary>
            <param name="fuzzerPrimitives">Instance of <see cref="T:Diverse.IProvideCorePrimitivesToFuzzer"/> to use.</param>
            <param name="numberFuzzer">Instance of <see cref="T:Diverse.IFuzzNumbers"/> to use.</param>
        </member>
        <member name="M:Diverse.PersonFuzzer.GenerateFirstName(System.Nullable{Diverse.Gender})">
            <summary>
            Generates a 'Diverse' first name (i.e. from all around the world and different cultures).
            </summary>
            <param name="gender">The <see cref="T:Diverse.Gender"/> to be used as indication (optional).</param>
            <returns>A 'Diverse' first name.</returns>
        </member>
        <member name="M:Diverse.PersonFuzzer.GenerateLastName(System.String)">
            <summary>
            Generates a 'Diverse' first name (i.e. from all around the world and different cultures).
            </summary>
            <param name="firstName">The first name of this person.</param>
            <returns>A 'Diverse' last name.</returns>
        </member>
        <member name="M:Diverse.PersonFuzzer.GeneratePerson(System.Nullable{Diverse.Gender})">
            <summary>
            Generates a 'Diverse' <see cref="T:Diverse.Person"/> (i.e. from all around the world and different cultures). 
            </summary>
            <param name="gender">The (optional) <see cref="T:Diverse.Gender"/> of this <see cref="T:Diverse.Person"/></param>
            <returns>A 'Diverse' <see cref="T:Diverse.Person"/> instance.</returns>
        </member>
        <member name="M:Diverse.PersonFuzzer.GenerateEMail(System.String,System.String)">
            <summary>
            Generates a random Email.
            </summary>
            <param name="firstName">The (optional) first name for this Email</param>
            <param name="lastName">The (option) last name for this Email.</param>
            <returns>A random Email.</returns>
        </member>
        <member name="M:Diverse.PersonFuzzer.GeneratePassword(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Generates a password following some common rules asked on the internet.
            </summary>
            <returns>The generated password</returns>
        </member>
        <member name="T:Diverse.Strings.Adjectives">
            <summary>
            Contains all the adjectives used by the library.
            </summary>
        </member>
        <member name="P:Diverse.Strings.Adjectives.PerFeeling">
            <summary>
            Gets a dictionary of all the adjective per <see cref="T:Diverse.Strings.Feeling"/>.
            </summary>
        </member>
        <member name="T:Diverse.Strings.Feeling">
            <summary>
            Feeling.
            </summary>
        </member>
        <member name="F:Diverse.Strings.Feeling.Positive">
            <summary>
            Positive <see cref="T:Diverse.Strings.Feeling"/>.
            </summary>
        </member>
        <member name="F:Diverse.Strings.Feeling.Negative">
            <summary>
            Negative <see cref="T:Diverse.Strings.Feeling"/>.
            </summary>
        </member>
        <member name="T:Diverse.Strings.StringFuzzer">
            <summary>
            Fuzz <see cref="T:System.String"/> values.
            </summary>
        </member>
        <member name="M:Diverse.Strings.StringFuzzer.#ctor(Diverse.IProvideCorePrimitivesToFuzzer)">
            <summary>
            Instantiates a <see cref="T:Diverse.Strings.StringFuzzer"/>.
            </summary>
            <param name="fuzzerPrimitives"></param>
        </member>
        <member name="M:Diverse.Strings.StringFuzzer.GenerateAdjective(System.Nullable{Diverse.Strings.Feeling})">
            <summary>
            Generates a random adjective based on a feeling.
            </summary>
            <param name="feeling">The expected feeling of the adjective</param>
            <returns>An adjective based on a particular feeling or random one if not provided</returns>
        </member>
    </members>
</doc>
